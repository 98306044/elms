<?php

include_once('elms_navigation_top.features.inc');

// $Id: elms_navigation_top.module
//Copyright (C) 2011  The Pennsylvania State University
//
//Bryan Ollendyke
//bto108@psu.edu
//
//Keith D. Bailey
//kdb163@psu.edu
//
//12 Borland
//University Park,  PA 16802
/**
 * @file
 *   Add a right side region for ELMS for containing social elements
 */

/**
 * Implementation of hook_define_region().
 */
function elms_navigation_top_define_regions() {
  $region['elms_navigation_top'] = array(
    'project' => 'elms_navigation_top',
    'js' => 'elms_navigation_top.js',
    'css' => 'elms_navigation_top.css',
  );
  return $region;
}

/**
 * Implementation of hook_block().
 */
function elms_navigation_top_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0] = array(
      'info' => t('System Path'),
      'weight' => 0,
      'status' => 0,
    );
  $blocks[1] = array(
      'info' => t('Notifications Container'),
      'weight' => 0,
      'status' => 0,
    );
  $blocks[2] = array(
      'info' => t('Top Nav User Menu Implementation'),
      'weight' => 0,
      'status' => 0,
    );
    return $blocks;
  }
  else if ($op == 'view') {
    switch ($delta) {
      case 0:
        $block['title'] = '<none>';
        $block['content'] = _elms_navigation_top_system_path();
      break;
      case 1:
        $block['title'] = '<none>';
        $block['content'] = _elms_navigation_top_notifications();
      break;
      case 2:
      //only show menu options for logged in users
      global $user;
      if (!isset($user->uid) || $user->uid == 0 || $user->uid == '') {
		$block['regions_allow_html_title'] = true;
        if (module_exists('webaccess')) {
          $block['title'] = l(t('Login'),'login');
        }
        else {
          $block['title'] = l(t('Login'),'user/login'); 
        }
		$block['content'] = ' ';
      }
      else {
        //manually load the usermenu menu so we can inject a new title
        $block = module_invoke('menu', 'block', 'view', 'menu-usermenu');
        $rendername = '';
        if (isset($user->picture)) {
          $rendername.= theme('imagecache', 'elms_navigation_top', $user->picture, $user->name ."'s profile picture","'s profile picture");
        }
        $rendername.= '<span>'. $user->name .'</span>';
        $block['title'] = $rendername;
        $block['regions_allow_html_title'] = true;
      }
      break;
    }
    return $block;
  }
}

//helper function to display current system path
function _elms_navigation_top_system_path() {
  //check for the simpliest case, this is part of a group
  $group = og_get_group_context();
  if (isset($group->nid)) {
    //need to manually build the website's name because of strongarm being too good!
    $site_frontpage = unserialize(db_result(db_query("SELECT value FROM {variable} WHERE name='site_frontpage'")));
    $site_name = unserialize(db_result(db_query("SELECT value FROM {variable} WHERE name='site_name'")));
    $output = theme('menu_item', l(t($site_name), $site_frontpage, array('purl' => array('disabled' => TRUE))), 0);
	//add a courses link for simplicity
    $output.= theme('menu_item', l(t('Courses'), 'courses', array('purl' => array('disabled' => TRUE))), 0);
    $val = db_fetch_array(db_query("SELECT n.title, td.name FROM {node} AS n JOIN {term_node} AS tn ON n.nid = tn.nid JOIN {term_data} AS td ON td.tid = tn.tid WHERE n.nid=%d", $group->field_course_ref[0]['nid']));
  //add the courses listing with the name of the taxonomy term
    $output.= theme('menu_item', l(t($val['name']), 'courses', array('purl' => array('disabled' => TRUE))), 0);
  //add the course home
    $output.= theme('menu_item', l(t($val['title']), 'node/'. $group->field_course_ref[0]['nid'], array('purl' => array('disabled' => TRUE))), 0);
  //add the current group homepage to the trail
    $output.= theme('menu_item', l(t($group->title), variable_get('site_frontpage', 'node/'. $group->nid)), 0);
  }
  else {
    //add the site name first
    $output = theme('menu_item', l(t(variable_get('site_name', '')), '<front>', array('purl' => array('disabled' => TRUE))), 0);
    //add a courses link for simplicity
    $output.= theme('menu_item', l(t('Courses'), 'courses', array('purl' => array('disabled' => TRUE))), 0);
    //see if we have a course node without loading the node
    $nid = arg(1);
    //verify this is an id
    if ($nid != '') {
      $type = db_result(db_query("SELECT type FROM {node} WHERE nid=%d", $nid));
    }
    //if this is a course, add the taxonomy and course name
    if ($type == 'course') {
      $val = db_fetch_array(db_query("SELECT n.title, td.name FROM {node} AS n JOIN {term_node} AS tn ON n.nid = tn.nid JOIN {term_data} AS td ON td.tid = tn.tid WHERE n.nid=%d", $nid));
    //taxonomy  term used
      $output.= theme('menu_item', l(t($val['name']), 'courses', array('purl' => array('disabled' => TRUE))), 0);
    //course home
      $output.= theme('menu_item', l(t($val['title']), 'node/'. $nid, array('purl' => array('disabled' => TRUE))), 0);
    }
  }
  
  return $output;
}

//helper function to display notifications
function _elms_navigation_top_notifications() {
  $output = '';
  return $output;
}