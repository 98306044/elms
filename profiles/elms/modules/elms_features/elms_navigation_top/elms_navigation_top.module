<?php

include_once('elms_navigation_top.features.inc');
//ELMS
//Copyright (C) 2011  The Pennsylvania State University
//
//Bryan Ollendyke
//bto108@psu.edu
//
//Keith D. Bailey
//kdb163@psu.edu
//
//12 Borland
//University Park,  PA 16802

/**
 * @file
 * Add a top bar region for ELMS
 */

/**
 * Implementation of hook_define_region().
 */
function elms_navigation_top_define_regions() {
  //implementation of the regions API
  $region['elms_navigation_top'] = array(
    'project' => 'elms_navigation_top',
    'js' => 'elms_navigation_top.js',
    'css' => 'elms_navigation_top.css',
  );
  return $region;
}

/**
 * Implementation of hook_block().
 */
function elms_navigation_top_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    //define custom blocks for the new global breadcrumb, notifications area and user menu
    $blocks[0] = array(
      'info' => t('System Path'),
      'weight' => 0,
      'status' => 0,
    );
    $blocks[1] = array(
      'info' => t('Notifications Container'),
      'weight' => 0,
      'status' => 0,
    );
    $blocks[2] = array(
      'info' => t('Top Nav User Menu Implementation'),
      'weight' => 0,
      'status' => 0,
    );
	$blocks[3] = array(
      'info' => t('Page Controls'),
      'weight' => 0,
      'status' => 0,
    );
    return $blocks;
  }
  elseif ($op == 'view') {
    switch ($delta) {
      case 0:
        $block['title'] = '<none>';
        $block['content'] = _elms_navigation_top_system_path();
      break;
      case 1:
        $block['title'] = '<none>';
        $block['content'] = _elms_navigation_top_notifications();
      break;
      case 2:
      //only show menu options for logged in users
      global $user;
      if (!isset($user->uid) || $user->uid == 0 || $user->uid == '') {
        $block['regions_allow_html_title'] = TRUE;
        //account for PSU's custom login system or to use the drupal default
        if (module_exists('webaccess')) {
          $block['title'] = l(t('Login'), 'login', array('query' => 'destination=courses'));
        }
        else {
          $block['title'] = l(t('Login'), 'user/login', array('query' => 'destination=courses'));
        }
        $block['content'] = ' ';
      }
      else {
        //manually load the usermenu menu so we can inject a new title
        $block = module_invoke('menu', 'block', 'view', 'menu-usermenu');
        $rendername = '';
        //if the user has a custom picture then render it, otherwise render the default
        if ($user->picture != NULL) {
          $rendername .= theme('imagecache', 'elms_navigation_top', $user->picture, $user->name ."'s profile picture", "'s profile picture");
        }
        else {
          $rendername .= theme('imagecache', 'elms_navigation_top', variable_get('user_picture_default', ''), $user->name ."'s profile picture", "'s profile picture");    
        }
        //wrap name to offset it from the piture
        $rendername .= '<span>'. $user->name .'</span>';
        $block['title'] = $rendername;
        //invoke the region's HTML title passthrough so that the image renders w/ html as a title
        $block['regions_allow_html_title'] = TRUE;
      }
      break;
	  case 3:
        $block['title'] = '<none>';
        $block['content'] = _elms_navigation_page_controls();
      break;
    }
    return $block;
  }
}

//helper function to display current system path
function _elms_navigation_top_system_path() {
  //check for the simpliest case, this is part of a group
  $group = og_get_group_context();
  if (isset($group->nid)) {
    //need to manually build the website's name and homepage because of strongarm being too good!
    $site_frontpage = unserialize(db_result(db_query("SELECT value FROM {variable} WHERE name='site_frontpage'")));
    $site_name = unserialize(db_result(db_query("SELECT value FROM {variable} WHERE name='site_name'")));
    $output = theme('menu_item', l(t($site_name), $site_frontpage, array('purl' => array('disabled' => TRUE))), 0);
    //add the taxonomy of the course version if it has a course association
    if ($group->field_course_ref[0]['nid'] != '') {
      $val = db_fetch_array(db_query("SELECT n.title, td.name FROM {node} AS n JOIN {term_node} AS tn ON n.nid = tn.nid JOIN {term_data} AS td ON td.tid = tn.tid WHERE n.nid=%d", $group->field_course_ref[0]['nid']));
  //add the courses listing with the name of the taxonomy term
      $output .= theme('menu_item', l(t($val['name']), 'courses', array('purl' => array('disabled' => TRUE))), 0);
    }
    else {
      //this isn't part of a course so add sandbox to the path
      $output .= theme('menu_item', l(t('Sandboxes'), 'courses/sandboxes', array('purl' => array('disabled' => TRUE))), 0);
    }
  //add the course home if this version is part of a course
    if ($group->field_course_ref[0]['nid'] != '') {
      $output .= theme('menu_item', l(t($val['title']), 'node/'. $group->field_course_ref[0]['nid'], array('purl' => array('disabled' => TRUE))), 0);
    }
  //add the current group homepage to the trail
    $output .= theme('menu_item', l(t($group->title), variable_get('site_frontpage', 'node/'. $group->nid), array('attributes' => array('title' => t($group->title)))), 0);
  }
  else {
    //add the site name first
    $output = theme('menu_item', l(t(variable_get('site_name', '')), '<front>', array('attributes' => array('title' => t('Home')), 'purl' => array('disabled' => TRUE))), 0);
    //see if we have a course node without loading the node
    $nid = arg(1);
    //verify this is an id
    if ($nid != '') {
      $type = db_result(db_query("SELECT type FROM {node} WHERE nid=%d", $nid));
    }
    //if this is a course, add the taxonomy and course name
    if ($type == 'course') {
      $val = db_fetch_array(db_query("SELECT n.title, td.name FROM {node} AS n JOIN {term_node} AS tn ON n.nid = tn.nid JOIN {term_data} AS td ON td.tid = tn.tid WHERE n.nid=%d", $nid));
    //taxonomy  term used
      $output .= theme('menu_item', l(t($val['name']), 'courses', array('attributes' => array('title' => t('Back to @unit course list', array('@unit' => $val['name']))), 'purl' => array('disabled' => TRUE))), 0);
    }
  else {
    $output .= theme('menu_item', l(t('All Courses'), 'courses', array('attributes' => array('title' => t('Back to course list')), 'purl' => array('disabled' => TRUE))), 0);
  }
  }
  //unify everything that's not in the courses view
  if (arg(0) != 'courses') {
  //dig out current menu path based on whats active
  $active_menu = menu_set_active_trail();
  //pop off the home link
  if ($active_menu[0]['title'] == 'Home') {
      array_shift($active_menu);
  }
    //iterate each menu item and convert to valid breadcrumb
    foreach ($active_menu as $menu) {
      if (isset($menu['link_path'])) {
        $output .= theme('menu_item', l(t($menu['title']), $menu['link_path'], array('attributes' => array('title' => t($menu['title'])))), 0);
      }
      else {
		$output .= theme('menu_item', l(t($menu['title']), $menu['href'], array('attributes' => array('title' => t($menu['title'])))), 0);
      }
    }
  }
  return $output;
}

//helper function to display notifications
function _elms_navigation_top_notifications() {
  $output = theme('menu_item', l(t('Helpdesk'), 'contact', array('attributes' => array('title' => t('Contact Helpdesk')), 'query' => 'destination='. $_GET['q'])), 0, '', FALSE, 'contact_form');
  //need to invoke the elms notifications hook to determine what should render here
  return $output;
}

//helper function to display page controls like book, print, and zoom
function _elms_navigation_page_controls() {
  
  return $output;
}