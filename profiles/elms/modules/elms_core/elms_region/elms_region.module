<?php

/**
 * @file
 *   Add regions to the screen that are cross-theme compliant
 */

/**
 * Implementation of hook_help().
 */
function elms_region_help($path, $arg) {
  if ($path == 'admin/help#elms_region') {
    return '<p>'. t('ELMS Regions adds regions that are cross theme compliant.  This way you can add blocks to any number of areas of the screen without having to define them in your themes.') .'</p>';
  }
}

/**
 * Implementation of hook_perm().
 */
function elms_region_perm() {
  $list = _elms_region_list();
  foreach ($list as $region) {
    $perms[] = 'use '. $region .' region';
  }
  return $perms;
}

/**
 * Implementation of hook_init().
 */
function elms_region_init() {
  //add the css / js if the user can use any regions
  $access_region = FALSE;
  $list = _elms_region_list();
  foreach ($list as $region) {
    if (user_access('use '. $region .' region')) {
      $access_region = TRUE;
    }
  }
  if ($access_region) {
    drupal_add_js(drupal_get_path('module', 'elms_region') .'/elms_region.js');
    drupal_add_css(drupal_get_path('module', 'elms_region') .'/elms_region.css');
  }
}

/**
 * Implementation of hook_footer().
 */
function elms_region_footer($main = 0) {
  //check for access to regions
  $list = _elms_region_list();
  $output = '';
  foreach ($list as $region) {
    if (user_access('use '. $region .' region')) {
      $output.= theme('elms_region', $region);
    }
  }
  return $output;
}

/**
 * Implementation of hook_system_info_alter().
 */
function elms_region_system_info_alter(&$info, $file) {
  if (isset($info['regions'])) {
  $list = _elms_region_list();
  foreach ($list as $region) {
    $info['regions'] += array('elms_region_'. $region => t('ELMS Regions: @name', array('@name' => $region)));
    }
  }
}

/**
 * Implementation of hook_theme().
 */
function elms_region_theme($existing, $type, $theme, $path) {
  return array(
    'elms_region' => array(
    'arguments' => array(
        'region_side' => 'left',
      ),
    ),
  );
}

/**
 * Themes the ELMS Regions.
 */
function theme_elms_region($region_side) {
  //Update the 'blocks' DB table with the blocks currently exported by modules.
  _block_rehash();
  //Get a list of blocks in the current region (from the Context module if necessary).
  $block_list = array();
  if (module_exists('context') && function_exists('context_get_plugin')) {
    $block_list = context_get_plugin('reaction', 'block')->block_list('elms_region_'. $region_side);
  }
  else {
    $block_list = block_list('elms_region_'. $region_side);
  }
  $blocks = '';
  $count = 0;
  foreach ($block_list as $block) {
  //hide the block if it doesnt have content, otherwise count how many were made
    if (!isset($block->content) || !$block->content) {
      continue;
    }
  else {
    $count++;
  }
    $key = $block->module .'_'. $block->delta;
    $blocks .= '<div class="elms_region_block elms_region_'. $count .'" id="elms_region_block_'. $key .'"><div class="elms_region_block_title">';
      if (!empty($block->subject)) {
        $blocks .= $block->subject;
      }
      else {
        $blocks .= t('<no title>');
      }
      $blocks .= '</div><div class="elms_region_block_content">'. $block->content .'</div></div>';
    }
	//see if there was anything added
	if ($count != 0) {
	  	$blocks .= '<div class="elms_region_toggle_closed elms_region_toggle"></div>';
	}
  return '<div id="elms_region_'. $region_side .'"><div class="elms_region_block_container">'. $blocks .'</div></div>';
}

//helper function to return an array of the available regions
//this makes it easier to add additional ones if needed
function _elms_region_list() {
  return array('left', 'right');
}