<?php
// $Id: regions.module
//Copyright (C) 2011  The Pennsylvania State University
//
//Bryan Ollendyke
//bto108@psu.edu
//
//Keith D. Bailey
//kdb163@psu.edu
//
//12 Borland
//University Park,  PA 16802
/**
 * @file
 *   Add regions to the screen that are cross-theme compliant
 */

/**
 * Implementation of hook_help().
 */
function regions_help($path, $arg) {
  if ($path == 'admin/help#regions') {
    return '<p>'. t('Regions adds regions that are cross theme compliant.  This way you can add blocks to any number of areas of the screen without having to define them in your themes.') .'</p>';
  }
}

/**
 * Implementation of hook_perm().
 */
function regions_perm() {
  $list = _regions_list();
  foreach ($list as $key => $region) {
    $perms[] = 'view '. $key .' region';
  }
  return $perms;
}

/**
 * Implementation of hook_init().
 */
function regions_init() {
  //pull all regions
  $list = _regions_list();
  foreach ($list as $machine_name => $region) {
    //add any js that might be included in the definition
	if (isset($region['js'])) {
      drupal_add_js(drupal_get_path('module', $region['project']) .'/'. $region['js']);
    }
    //add any css that might be included in the definition
    if (isset($region['css'])) {
      drupal_add_css(drupal_get_path('module', $region['project']) .'/'. $region['css']);
    }
  }
}

/**
 * Implementation of hook_footer().
 */
function regions_footer($main = 0) {
  //check for access to regions
  $list = _regions_list();
  $output = '';
  foreach ($list as $machine_name => $region) {
    if (user_access('view '. $machine_name .' region')) {
      $output.= theme('regions', $machine_name);
    }
  }
  return $output;
}

/**
 * Implementation of hook_system_info_alter().
 */
function regions_system_info_alter(&$info, $file) {
  if (isset($info['regions'])) {
    $list = _regions_list();
	//add the regions into the definition typically only provided by the theme layer
    foreach ($list as $machine_name => $region) {
      $info['regions'] += array('regions_'. $machine_name => t('Regions: @name', array('@name' => $machine_name)));
    }
  }
}

/**
 * Implementation of hook_theme().
 */
function regions_theme($existing, $type, $theme, $path) {
  return array(
    'regions' => array(
    'arguments' => array(
        'region_name' => '',
      ),
    ),
  );
}

/**
 * Themes Regions.
 */
function theme_regions($region_name) {
  //Update the 'blocks' DB table with the blocks currently exported by modules.
  _block_rehash();
  //Get a list of blocks in the current region (from the Context module if necessary).
  $block_list = array();
  if (module_exists('context') && function_exists('context_get_plugin')) {
    $block_list = context_get_plugin('reaction', 'block')->block_list('regions_'. $region_name);
  }
  else {
    $block_list = block_list('regions_'. $region_name);
  }
  $blocks = '';
  $count = 0;
  foreach ($block_list as $block) {
    //hide the block if it doesnt have content, otherwise count how many were made
    if (!isset($block->content) || !$block->content) {
      continue;
    }
    else {
      $count++;
    }
	//build a unique key for this block for theming
    $key = $block->module .'_'. $block->delta;
    $blocks .= '<div class="regions_block regions_'. $count .'" id="regions_block_'. $key .'"><div class="regions_block_title">';
      if (!empty($block->subject)) {
		//allow for HTML titles based on intentional API inclusion
		if ($block->regions_allow_html_title) {
          $blocks .= $block->title;
		}
		else {
          $blocks .= $block->subject;
		}
      }
      else {
        $blocks .= t('<no title>');
      }
      $blocks .= '</div><div class="regions_block_content">'. $block->content .'</div></div>';
    }
  //if we returned blocks then render the region
  if ($blocks != '') {
    return '<div id="regions_'. $region_name .'"><div class="regions_pre_block_container"></div><div class="regions_block_container">'. $blocks .'</div><div class="regions_post_block_container"></div></div>';
  }
}

//helper function to return an array of the available regions
//this makes it easier to add additional ones if needed
function _regions_list() {
  $regions = module_invoke_all('define_regions');
  return $regions;
}