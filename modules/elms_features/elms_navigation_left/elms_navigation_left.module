<?php

include_once('elms_navigation_left.features.inc');

//Copyright (C) 2011  The Pennsylvania State University
//
//Bryan Ollendyke
//bto108@psu.edu
//
//Keith D. Bailey
//kdb163@psu.edu
//
//12 Borland
//University Park,  PA 16802

/**
 * @file
 * Add a left side region to elms
 */

/**
 * Implementation of hook_define_region().
 */
function elms_navigation_left_define_regions() {
  $region['regions_elms_navigation_left'] = array(
    'title' => 'ELMS Nav Left',
    'js' => drupal_get_path('module', 'elms_navigation_left') .'/elms_navigation_left.js',
    'css' => drupal_get_path('module', 'elms_navigation_left') .'/elms_navigation_left.css',
		'render_callback' => '_elms_navigation_left_render_region',
  );
  return $region;
}

/**
 * Implementation of hook_form_alter().
 */
function elms_navigation_left_form_alter(&$form, &$form_state, $form_id) {
  //make the masquerade block display differently in the left hand menu to fit one line
	
  if ($form_id == 'masquerade_block_1' && isset($form['masquerade_user_field'])) {
		//remove message
		unset($form['masquerade_desc']);
		//help it fit in the left collapse
    $form['masquerade_user_field']['#size'] = 8;
	$form['#prefix'] .='<li class="leaf click_handler"><a name="masquerade" title="Open to Masquerade"></a></li>';
  }
}

/**
 * Implementation of hook_block().
 */
function elms_navigation_left_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[1] = array(
      'info' => t('Course Level Navigation'),
      'weight' => 0,
      'status' => 0,
    );
    $blocks[2] = array(
      'info' => t('Actions Level Navigation'),
      'weight' => 0,
      'status' => 0,
    );
		$blocks[3] = array(
      'info' => t('Help Popup'),
      'weight' => 0,
      'status' => 0,
    );
    return $blocks;
  }
  elseif ($op == 'view') {
    $group = og_get_group_context();
    switch ($delta) {
      case 1:
        if (isset($group->nid)) {
          $block['title'] = t('Site');
          $block['content'] = _elms_navigation_left_parent_block($group);
        }
      break;
      case 2:
			  //remove tabs and display as a block only if this is content in a group
        if (isset($group->nid) && arg(1) != $group->nid) {
          $block['title'] = t('Content');
          $block['content'] = _elms_navigation_left_page_block();
					drupal_add_css(drupal_get_path('module', 'elms_navigation_left') .'/hide_tabs.css');
        }
			break;
			case 3:
			  $block['title'] = '<none>';
        $block['content'] = _elms_navigation_left_help_block();
      break;
    }
    return $block;
  }
}

//helper function for Help icon addition
function _elms_navigation_left_help_block() {
  if (user_access('view advanced help popup')) {
	  return theme('menu_item', l(t('ELMS Help'), 'admin/advanced_help/elms_helper', array('query'  => array('popup' => TRUE), 'attributes' => array('onclick' => "var w=window.open(this.href, 'advanced_help_window', 'width=640,height=480,scrollbars,resizable'); w.focus(); return false;", 'title' => 'ELMS Help'))), 0, '', FALSE, 'help');
	}
}

//helper function Page level tasks
function _elms_navigation_left_page_block() {
  $output = menu_local_tasks();
  //annoying but can't find a way into this layer at this time to add classes a good way
  $output = preg_replace('/<a/', '<a  title="'. t('View Content') .'" class="page_view"', $output, 1);
  //add edit class
  $output = str_replace('/edit">', '/edit" class="page_edit" title="'. t('Edit Content') .'">', $output);
  //add accessibility class
  $output = str_replace('/accessibility">', '/accessibility/highlight" class="page_accessibility" title="'. t('Accessibility Test') .'">', $output);
  //add track class
  $output = str_replace('/track">', '/track" class="page_track" title="'. t('Track') .'">', $output);
  //add devel class -- admin/developer only
  $output = str_replace('/devel">', '/devel" class="page_devel" title="'. t('Developer Node Debug') .'">', $output);
  return $output;
}

//helper function Course level tasks
function _elms_navigation_left_parent_block($group) {
  $output = '';
	//make the current workflow state as visible as possible
  if (user_access('administer workflow')) {
    $output .= theme('menu_item', l(t(workflow_get_state_name($group->_workflow)),  'node/'. $group->nid .'/workflow', array('query' => 'destination='. $_GET['q'], 'attributes' => array('title' => t('Course State: @workflow', array('@workflow' => workflow_get_state_name($group->_workflow)))))), 0, '', FALSE, 'workflow_state workflow_state_'. $group->_workflow);
  }
  //if course content active, add the outline designer link
  if (spaces_access_feature('view', 'elms_content')) {
    if (user_access('administer book outlines')) {
	  $output .= theme('menu_item', l(t('Content Outline'), 'outline_designer/book/'. $group->book_nid, array('attributes' => array('title' => 'Content Outline'))), 0, '', FALSE, 'content_outline');
    }
  }
	if (user_access('edit version content')) {
    $output .= theme('menu_item', l(t('Course Settings'), 'node/'. $group->nid, array('attributes' => array('title' => 'Course Settings'))), 0, '', FALSE, 'system');
	}
  //import content
  if (module_exists('elms_content_import') && user_access('access administration pages')) {
    if (user_access('import elms_node_import feeds')) {
      $output .= theme('menu_item', l(t('Import Content'), 'import/elms_node_import', array('attributes' => array('title' => 'Import Outline'))), 0, '', FALSE, 'manage_content');
    }
  }
  return $output;
}

/**
 * Implementation of hook_regions_region_alter().
 */
function elms_navigation_left_regions_region_alter(&$region, $region_name) {
  // Example to add an inner DIV to the region markup.
	if ($region_name == 'regions_elms_navigation_left' && !empty($region['blocks'])) {
    $new_markup = array(
      'start' => $region['start'],
      'inner' => '<div class="regions_pre_block_container"></div><div class="regions_block_container">',
      'blocks' => $region['blocks'],
      'inner_end' => '</div><div class="regions_post_block_container"></div>',
      'end' => $region['end'],
    );
    $region = $new_markup;
	}
}

/**
 * Helper function for rendering the blocks in this region
 */
function _elms_navigation_left_render_region($block_html, $block) {
  //build a unique key for this block for theming
	static $count = 0;
	$count++;
  $key = $block->module .'_'. $block->delta;
  $output .= '<div class="regions_block regions_'. $count .'" id="regions_block_'. $key .'"><div class="regions_block_title">';
	$output .= $block->subject;
  $output .= '</div><div class="regions_block_content">'. $block->content .'</div></div>';
  //if we returned blocks then render the region
  if ($output != '') {
    return $output;
  }
}
