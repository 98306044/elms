<?php
//Copyright (C) 2011-2012  The Pennsylvania State University
//
//Bryan Ollendyke
//bto108@psu.edu
//
//Keith D. Bailey
//kdb163@psu.edu
//
//12 Borland
//University Park, PA 16802

/**
 * Implementation of hook_perm().
 */
function elms_export_html_perm() {
  return array('export site as html');
}

/**
 * Implementation of hook_help().
 */
function elms_export_html_help($section) {
  switch ($section) {
    case 'admin':
      return t("ELMS Export HTML lets you export your site to static HTML.");
  }
}

/**
 * Implementation of hook_menu().
 */
function elms_export_html_menu() {
  $items = array();
  $items['node/%node/html_export'] = array(
    'title' => 'HTML Export',
    'description' => 'Export your drupal site to static html page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('elms_export_html_settings'),
    'access arguments' => array('export site as html'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of hook_settings().
 */
function elms_export_html_settings() {
  $form['submit'] = array(
    '#type' => 'submit',
  '#description' => 'This will export your current site to HTML.',
    '#value' => t('Export to HTML'),
    '#weight' => 10,
    '#submit' => array('elms_export_html_settings_submit'),
  );
  return $form;
}

/**
 * Implementation of hook_settings_submit().
 */
function elms_export_html_settings_submit($form_id, $form_values) {
    $group = og_get_group_context();
    $nids = array();
    //create a folder html_export to put the directory in if it doesnt exist
    $dir = file_create_path(file_directory_path() . '/html_export');
    file_check_directory($dir, 1);
    //make the directory path for this export (just timestamp)
    $export_path = $dir .'/export'. time();
    file_check_directory(file_create_path($export_path), 1);
    //build a list of nodes for path translation
    $result = db_query(db_rewrite_sql("SELECT {node}.nid FROM {node} JOIN {og_ancestry} ON {og_ancestry}.nid={node}.nid WHERE status=1 AND group_nid=%d ORDER BY nid DESC"), $group->nid);
    while ($val = db_fetch_array($result)) {
      $nids['node/'. $val['nid']] = 'node-'. $val['nid'] .'.html';
    }
    //make all the files
    $result = db_query(db_rewrite_sql("SELECT {node}.nid FROM {node} JOIN {og_ancestry} ON {og_ancestry}.nid={node}.nid WHERE status=1 AND group_nid=%d ORDER BY nid DESC"), $group->nid);
    while ($val = db_fetch_array($result)) {
      menu_set_active_item('node/'. $val['nid']);
      $return = menu_execute_active_handler();
      $data = theme('page', $return);
      //convert all paths to the new ones based on what we know will be exported
      foreach ($nids as $path => $new_path) {
        $data = str_replace($path, $new_path, $data);
      }
      //open a file for writing with the new path
      $file = fopen($export_path .'/'. $nids['node/'. $val['nid']] , 'w');
      fwrite($file, $data);
      fclose($file);
    }
    //create index page which is the book root node id
    menu_set_active_item('node/'. $group->book_nid);
    $return = menu_execute_active_handler();
    $data = theme('page', $return);
    //convert all paths to the new ones based on what we know will be exported
    foreach ($nids as $path => $new_path) {
      $data = str_replace($path, $new_path, $data);
    }
    $file = fopen($export_path . '/index.html', 'w');
    fwrite($file, $data);
    fclose($file);
    //need to generate a list of modules and themes to copy as well as files directory except for html_export folder
  drupal_set_message("If you don't see any errors the site was exported successfully! @link here to access the export.", array('@link' => l('Click', drupal_substr($export_path, strpos($export_path, $dir)) . "/index.html")));
  //seems silly but needed because we are manipulating the location upstream
  drupal_goto('node/'. $group->nid .'/html_export');
}
