<?php
//ELMS: ELMS Helpdesk
//Development Sponsored by The Pennsylvania State University
//ELMS is Copyright (C) 2008-2011  The Pennsylvania State University
//
//Bryan Ollendyke
//bto108@psu.edu
//
//Keith D. Bailey
//kdb163@psu.edu
//
//12 Borland
//University Park,  PA 16802

/**
 * @file
 * Adds functionality that's useful for running a helpdesk
 */



/**
 * Implementation of hook_form_alter().
 */
function elms_helpdesk_init() {
  //add in the jquery but only for the contact form
  if (arg(0) == 'contact') {
    drupal_add_js(drupal_get_path('module', 'elms_helpdesk') .'/elms_helpdesk.js');
	//add path to test image so we can do a download test
	$settings = array(
      'elms_helpdesk' => array(
	    'test_image' => '/'. drupal_get_path('module', 'elms_helpdesk') .'/speedtest.png',
      ),
	);
    drupal_add_js($settings, 'setting');
  }
}
/**
 * Implementation of hook_form_alter().
 */
function elms_helpdesk_form_alter(&$form, &$form_state, $form_id) {
  //trap for the contact page to perform the form alterations
  if ($form_id == 'contact_mail_page' && count($form_state['post']) == 0) {
    global $user;
    //additional step to load the user profile into the user object
    profile_load_profile($user);
    //hide the input field for the email address
    $form['mail']['#type'] = 'hidden';
    //hide roles but this way it can be emailed and set to user's roles
    $form['field_roles']['#type'] = 'hidden';
    //parse the user's roles so we can send it to our staff
    foreach ($user->roles as $key => $role) {
      //ignore authenticated user role
      if ($key != 2) {
        $role_list .= $role .' ';
      }
    }
    //set the hidden field's value
    $form['field_roles']['#default_value'] = $role_list;
    //add a heading describing who it will email currently
    $form['markup']['#type'] = 'markup';
    $form['markup']['#value'] = 'This message will be sent to: '. $user->profile_first_name .' '. $user->profile_last_name .' ('. $form['mail']['#default_value'] .')';
    $form['markup']['#weight'] = -10;
    //hide the copy message as it should email the person what they sent by default
    $form['copy']['#default_value'] = TRUE;
    $form['copy']['#type'] = 'hidden';
    //format name field to use profile fields in elms
    $form['name']['#type'] = 'hidden';
    $form['name']['#value'] = $user->profile_first_name .' '. $user->profile_last_name .' ('. $form['mail']['#default_value'] .')';
    $form['name']['#weight'] = -9;
    //format the subject
    $group = og_get_group_context();
    if (isset($group->nid)) {
      //see if this is a sandbox or not
      if (isset($group->field_course_ref[0]['nid'])) {
        $course = node_load($group->field_course_ref[0]['nid']);    
        $form['subject']['#default_value'] = 'Issue in '. $course->title;
      }
      $form['subject']['#default_value'] .= ' - '. $group->title;
      $form['subject']['#type'] = 'hidden';
    }
    //add in geoip if its turned on
    if (module_exists('geoip')) {
      $form['field_tech_details']['#value'] .= "Country: ". geoip_country_code() ."\n";
    }
    //add path to the location they were on when they clicked help
    //try and get the referer
    if ($_SERVER['HTTP_REFERER'] != '') {
        $page_path = $_SERVER['HTTP_REFERER'];
    }
    //if that is empty try the destination
    else if ($_REQUEST['destination'] != '') {
        $page_path = $_REQUEST['destination'];
    }
    //if that is empty just add on the q path
    else {
        $page_path = $_GET['q'];
    }
    $form['field_tech_details']['#value'] .= "Page: ". $page_path ."\n";
    //make this hidden so we can append the user tech details to something meaningful
    $form['field_tech_details']['#type'] = 'hidden';
	//change the language from Send e-mail
	$form['submit']['#value'] = t('Contact Helpdesk');
  }
}